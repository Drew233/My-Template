{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My template \u00b6 For learn me more visit cndrew.cn . My purpose \u00b6 Create a personal template.I love acm,yes. The reason \u00b6 Mkdocs is more suitable than hexo when you prefer write a template or book. Install and Use Mkdocs. \u00b6 Install \u00b6 About this part,I think you should visit mkdocs.org ,there is a detailed introduction there. Use \u00b6 The use of mkdocs,I don't know enough now,so I just tell you how to use it with giuhub pages. Add a new repo on your github \u00b6 The first step is easy that I believe you can finish it without any doubt.And then you are advised to clone all the repo files to you computer with \"git clone\". Import project \u00b6 Transfer all the files in the project you generated with Mkdocs to the folder that you clone from github. The final step \u00b6 Run mkdocs gh-deploy ,and mkdocs will automatically generate web pages and upload them to github.That is the most part of Mkdocs I like. \u989c\u8272\u4e3b\u9898 \u00b6 \u4e3b\u8272 \u00b6 \u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) \u8f85\u52a9\u8272 \u00b6 \u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click() Learn more \u00b6 You can visit Mkdocs-github pages . Of course mkdocs-material is good!","title":"\u4ecb\u7ecd"},{"location":"#welcome-to-my-template","text":"For learn me more visit cndrew.cn .","title":"Welcome to My template"},{"location":"#my-purpose","text":"Create a personal template.I love acm,yes.","title":"My purpose"},{"location":"#the-reason","text":"Mkdocs is more suitable than hexo when you prefer write a template or book.","title":"The reason"},{"location":"#install-and-use-mkdocs","text":"","title":"Install and Use Mkdocs."},{"location":"#install","text":"About this part,I think you should visit mkdocs.org ,there is a detailed introduction there.","title":"Install"},{"location":"#use","text":"The use of mkdocs,I don't know enough now,so I just tell you how to use it with giuhub pages.","title":"Use"},{"location":"#add-a-new-repo-on-your-github","text":"The first step is easy that I believe you can finish it without any doubt.And then you are advised to clone all the repo files to you computer with \"git clone\".","title":"Add a new repo on your github"},{"location":"#import-project","text":"Transfer all the files in the project you generated with Mkdocs to the folder that you clone from github.","title":"Import project"},{"location":"#the-final-step","text":"Run mkdocs gh-deploy ,and mkdocs will automatically generate web pages and upload them to github.That is the most part of Mkdocs I like.","title":"The final step"},{"location":"#_1","text":"","title":"\u989c\u8272\u4e3b\u9898"},{"location":"#_2","text":"\u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"\u4e3b\u8272"},{"location":"#_3","text":"\u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"\u8f85\u52a9\u8272"},{"location":"#learn-more","text":"You can visit Mkdocs-github pages . Of course mkdocs-material is good!","title":"Learn more"},{"location":"about/","text":"About me \u00b6 A boy like programming and basketball. Connect with me \u00b6 Email: gmail QQmail If you find some problems here,just tell me. \u00b6 Here we go","title":"\u5173\u4e8e"},{"location":"about/#about-me","text":"A boy like programming and basketball.","title":"About me"},{"location":"about/#connect-with-me","text":"Email: gmail QQmail","title":"Connect with me"},{"location":"about/#if-you-find-some-problems-herejust-tell-me","text":"Here we go","title":"If you find some problems here,just tell me."},{"location":"Graph/Dijkstra/","text":"Dijkstra \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #include <bits/stdc++.h> using namespace std; const int maxn = 1e4 + 5; const int INF = 0x3f3f3f3f; int a[maxn][maxn]; int dis[maxn]; bool vis[maxn]; int n, m, u, v, w; struct node { int d, id; }; bool operator <(const node &a, const node &b) { return a.d > b.d; } priority_queue<node> que; void Dijkstra() { for (int i = 1; i <= n; i++) dis[i] = INF; dis[1] = 0; que.push(node{ dis[1], 1 }); while (!que.empty()) { node p = que.top(); que.pop(); int mid = p.id; if (vis[mid] == 1) continue; vis[mid] = 1; for (int i = 1; i <= n; i++) { if (dis[i] > dis[mid] + a[mid][i]) { dis[i] = dis[mid] + a[mid][i]; que.push(node{ dis[i], i }); } } } cout << dis[n] << endl; } int main() { while (scanf(\"%d %d\", &n, &m) && (n && m)) { memset(vis, 0, sizeof(vis)); for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) a[i][j] = INF; for (int i = 1; i <= m; i++) { cin >> u >> v >> w; a[u][v] = w; a[v][u] = w; } Dijkstra(); } } Floyd \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include <bits/stdc++.h> using namespace std; const int maxn = 1e4 + 5; const int INF = 0x3f3f3f3f; int a[maxn][maxn]; int main() { int n, m, u, v, p; while (cin >> n >> m) { if (n == 0 && m == 0) break; for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) a[i][j] = INF; for (int i = 0; i < m; i++) { cin >> u >> v >> p; a[u][v] = p; a[v][u] = p; } for (int k = 1; k <= n; k++) for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) if (a[i][j] > a[i][k] + a[k][j]) a[i][j] = a[i][k] + a[k][j]; cout << a[1][n] << endl; } return 0; }","title":"\u6700\u77ed\u8def"},{"location":"Graph/Dijkstra/#dijkstra","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #include <bits/stdc++.h> using namespace std; const int maxn = 1e4 + 5; const int INF = 0x3f3f3f3f; int a[maxn][maxn]; int dis[maxn]; bool vis[maxn]; int n, m, u, v, w; struct node { int d, id; }; bool operator <(const node &a, const node &b) { return a.d > b.d; } priority_queue<node> que; void Dijkstra() { for (int i = 1; i <= n; i++) dis[i] = INF; dis[1] = 0; que.push(node{ dis[1], 1 }); while (!que.empty()) { node p = que.top(); que.pop(); int mid = p.id; if (vis[mid] == 1) continue; vis[mid] = 1; for (int i = 1; i <= n; i++) { if (dis[i] > dis[mid] + a[mid][i]) { dis[i] = dis[mid] + a[mid][i]; que.push(node{ dis[i], i }); } } } cout << dis[n] << endl; } int main() { while (scanf(\"%d %d\", &n, &m) && (n && m)) { memset(vis, 0, sizeof(vis)); for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) a[i][j] = INF; for (int i = 1; i <= m; i++) { cin >> u >> v >> w; a[u][v] = w; a[v][u] = w; } Dijkstra(); } }","title":"Dijkstra"},{"location":"Graph/Dijkstra/#floyd","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include <bits/stdc++.h> using namespace std; const int maxn = 1e4 + 5; const int INF = 0x3f3f3f3f; int a[maxn][maxn]; int main() { int n, m, u, v, p; while (cin >> n >> m) { if (n == 0 && m == 0) break; for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) a[i][j] = INF; for (int i = 0; i < m; i++) { cin >> u >> v >> p; a[u][v] = p; a[v][u] = p; } for (int k = 1; k <= n; k++) for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) if (a[i][j] > a[i][k] + a[k][j]) a[i][j] = a[i][k] + a[k][j]; cout << a[1][n] << endl; } return 0; }","title":"Floyd"},{"location":"Graph/kruskal/","text":"kruskal \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #include <bits/stdc++.h> using namespace std; struct city { int a; int b; int p; } c[105]; int p[105]; int find(int x) { return p[x] != x ? p[x] = find(p[x]) : x; } void join(int x, int y) { x = find(x); y = find(y); if (x != y) p[y] = x; } bool cmp(city x, city y) { return x.p < y.p; } int main() { int n, m; while (cin >> n >> m) { int sum = 0; if (n == 0) break; for (int i = 1; i <= m; i++) p[i] = i; for (int i = 0; i < n; i++) cin >> c[i].a >> c[i].b >> c[i].p; sort(c, c + n, cmp); for (int i = 0; i < n; i++) { if (find(c[i].a) != find(c[i].b)) { join(c[i].a, c[i].b); sum += c[i].p; } } int flag = 0; for (int i = 1; i <= m; i++) { if (p[i] == i) flag++; } if (flag == 1) cout << sum << endl; else puts(\"?\"); } return 0; }","title":"\u6700\u5c0f\u751f\u6210\u6811"},{"location":"Graph/kruskal/#kruskal","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #include <bits/stdc++.h> using namespace std; struct city { int a; int b; int p; } c[105]; int p[105]; int find(int x) { return p[x] != x ? p[x] = find(p[x]) : x; } void join(int x, int y) { x = find(x); y = find(y); if (x != y) p[y] = x; } bool cmp(city x, city y) { return x.p < y.p; } int main() { int n, m; while (cin >> n >> m) { int sum = 0; if (n == 0) break; for (int i = 1; i <= m; i++) p[i] = i; for (int i = 0; i < n; i++) cin >> c[i].a >> c[i].b >> c[i].p; sort(c, c + n, cmp); for (int i = 0; i < n; i++) { if (find(c[i].a) != find(c[i].b)) { join(c[i].a, c[i].b); sum += c[i].p; } } int flag = 0; for (int i = 1; i <= m; i++) { if (p[i] == i) flag++; } if (flag == 1) cout << sum << endl; else puts(\"?\"); } return 0; }","title":"kruskal"},{"location":"dp/LIS/","text":"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> #include <algorithm> #include <cstdio> using namespace std; const int maxn = 50050; const int INF = 0x3f3f3f3f; int dp[maxn], a[maxn]; int main() { int n; cin >> n; for (int i = 0; i < n; i++) { cin >> a[i]; } fill(dp, dp + n, INF); for (int i = 0; i < n; i++) { *lower_bound(dp, dp + n, a[i]) = a[i]; } cout << lower_bound(dp, dp + n, INF) - dp << endl; }","title":"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217"},{"location":"dp/LIS/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> #include <algorithm> #include <cstdio> using namespace std; const int maxn = 50050; const int INF = 0x3f3f3f3f; int dp[maxn], a[maxn]; int main() { int n; cin >> n; for (int i = 0; i < n; i++) { cin >> a[i]; } fill(dp, dp + n, INF); for (int i = 0; i < n; i++) { *lower_bound(dp, dp + n, a[i]) = a[i]; } cout << lower_bound(dp, dp + n, INF) - dp << endl; }","title":"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217"},{"location":"dp/LS/","text":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <algorithm> #include <cstdio> #include <cstring> #include <stack> using namespace std; const int maxn = 1050; int dp[maxn][maxn]; char a[maxn], b[maxn]; int main() { scanf(\"%s %s\", a + 1, b + 1); int n = strlen(a + 1), m = strlen(b + 1); for (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) { if (a[i] == b[j]) dp[i][j] = dp[i - 1][j - 1] + 1; else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]); } stack<char> ans; while (n >= 1 && m >= 1) { if (dp[n][m] == 0) break; if (dp[n][m] - dp[n - 1][m - 1] == 1 && dp[n - 1][m - 1] == dp[n - 1][m] && dp[n - 1][m - 1] == dp[n][m - 1]) { ans.push(a[n]); n--; m--; } else if (dp[n][m] == dp[n - 1][m] && n > 1) n--; else if (dp[n][m] == dp[n][m - 1] && m > 1) m--; } while (!ans.empty()) { printf(\"%c\", ans.top()); ans.pop(); } puts(\"\"); return 0; }","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"dp/LS/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <algorithm> #include <cstdio> #include <cstring> #include <stack> using namespace std; const int maxn = 1050; int dp[maxn][maxn]; char a[maxn], b[maxn]; int main() { scanf(\"%s %s\", a + 1, b + 1); int n = strlen(a + 1), m = strlen(b + 1); for (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) { if (a[i] == b[j]) dp[i][j] = dp[i - 1][j - 1] + 1; else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]); } stack<char> ans; while (n >= 1 && m >= 1) { if (dp[n][m] == 0) break; if (dp[n][m] - dp[n - 1][m - 1] == 1 && dp[n - 1][m - 1] == dp[n - 1][m] && dp[n - 1][m - 1] == dp[n][m - 1]) { ans.push(a[n]); n--; m--; } else if (dp[n][m] == dp[n - 1][m] && n > 1) n--; else if (dp[n][m] == dp[n][m - 1] && m > 1) m--; } while (!ans.empty()) { printf(\"%c\", ans.top()); ans.pop(); } puts(\"\"); return 0; }","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"dp/Maxsum/","text":"\u6700\u5927\u5b50\u6bb5\u548c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> using namespace std; int main() { int n, now; long long maxsum, sum; while (cin >> n) { maxsum = sum = 0; for (int i = 1; i <= n; i++) { cin >> now; sum = max(sum, 0LL) + now; maxsum = max(sum, maxsum); } cout << maxsum << endl; } return 0; }","title":"\u6700\u5927\u5b50\u6bb5\u548c"},{"location":"dp/Maxsum/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> using namespace std; int main() { int n, now; long long maxsum, sum; while (cin >> n) { maxsum = sum = 0; for (int i = 1; i <= n; i++) { cin >> now; sum = max(sum, 0LL) + now; maxsum = max(sum, maxsum); } cout << maxsum << endl; } return 0; }","title":"\u6700\u5927\u5b50\u6bb5\u548c"},{"location":"dp/distance/","text":"\u7f16\u8f91\u8ddd\u79bb \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> #include <cstdio> #include <cstring> #include <algorithm> using namespace std; const int maxn = 1050; int f[maxn][maxn]; string a, b; bool same(char x, char y) { if (x == y) return 0; return 1; } int main() { while (cin >> a >> b) { memset(f, 0, sizeof(f)); for (int i = 0; i <= a.size(); i++) { for (int j = 0; j <= b.size(); j++) { if (i == 0) f[i][j] = j; else if (j == 0) f[i][j] = i; else f[i][j] = min(f[i - 1][j - 1] + same(a[i - 1], b[j - 1]), min(f[i - 1][j] + 1, f[i][j - 1] + 1)); } } cout << f[a.size()][b.size()] << endl; } return 0; }","title":"\u7f16\u8f91\u8ddd\u79bb"},{"location":"dp/distance/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> #include <cstdio> #include <cstring> #include <algorithm> using namespace std; const int maxn = 1050; int f[maxn][maxn]; string a, b; bool same(char x, char y) { if (x == y) return 0; return 1; } int main() { while (cin >> a >> b) { memset(f, 0, sizeof(f)); for (int i = 0; i <= a.size(); i++) { for (int j = 0; j <= b.size(); j++) { if (i == 0) f[i][j] = j; else if (j == 0) f[i][j] = i; else f[i][j] = min(f[i - 1][j - 1] + same(a[i - 1], b[j - 1]), min(f[i - 1][j] + 1, f[i][j - 1] + 1)); } } cout << f[a.size()][b.size()] << endl; } return 0; }","title":"\u7f16\u8f91\u8ddd\u79bb"},{"location":"dp/pack/","text":"\u6362\u96f6\u94b1 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std; typedef long long ll; ll solve(ll x) { int coins[13] = { 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000 }; ll dp[100005] = { 0 }; dp[0] = 1; for (int i = 0; i < 13; i++) { for (int j = coins[i]; j <= x; j++) { dp[j] = (dp[j] + dp[j - coins[i]]) % 1000000007; } } return dp[x]; } int main() { ll t, a; cin >> t; while (t--) { cin >> a; cout << solve(a) << endl; } }","title":"\u6362\u96f6\u94b1(\u80cc\u5305)"},{"location":"dp/pack/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std; typedef long long ll; ll solve(ll x) { int coins[13] = { 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000 }; ll dp[100005] = { 0 }; dp[0] = 1; for (int i = 0; i < 13; i++) { for (int j = coins[i]; j <= x; j++) { dp[j] = (dp[j] + dp[j - coins[i]]) % 1000000007; } } return dp[x]; } int main() { ll t, a; cin >> t; while (t--) { cin >> a; cout << solve(a) << endl; } }","title":"\u6362\u96f6\u94b1"},{"location":"geometric/s/","text":"\u6c42\u591a\u8fb9\u5f62\u9762\u79ef \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> #include <cstdio> #include <cstdlib> using namespace std; int main() { int ncase; cin >> ncase; int x, y, x0, y0, sum = 0; cin >> x >> y; x0 = x; y0 = y; while (--ncase) { int xtmp, ytmp; cin >> xtmp >> ytmp; sum += (x * ytmp - y * xtmp); x = xtmp; y = ytmp; } sum += (x * y0 - y * x0); printf(\"%d\\n\", int(abs(sum) / 2)); return 0; }","title":"\u6c42\u591a\u8fb9\u5f62\u9762\u79ef"},{"location":"geometric/s/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> #include <cstdio> #include <cstdlib> using namespace std; int main() { int ncase; cin >> ncase; int x, y, x0, y0, sum = 0; cin >> x >> y; x0 = x; y0 = y; while (--ncase) { int xtmp, ytmp; cin >> xtmp >> ytmp; sum += (x * ytmp - y * xtmp); x = xtmp; y = ytmp; } sum += (x * y0 - y * x0); printf(\"%d\\n\", int(abs(sum) / 2)); return 0; }","title":"\u6c42\u591a\u8fb9\u5f62\u9762\u79ef"},{"location":"math/Fibo/","text":"\u6590\u6ce2\u90a3\u5951(\u5927\u6570\uff0c\u6839\u636e\u7b2cn\u9879\u7684\u503c\u63a8\u51fan) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <bits/stdc++.h> using namespace std; const int maxx = 1e9 + 7; typedef long long ll; ll f[200050]; char s[100000]; int main() { ios::sync_with_stdio(false); map<ll, ll> ma; f[0] = 0; f[1] = 1; for (ll i = 2; i < 200001; i++) { f[i] = (f[i - 1] + f[i - 2]) % maxx; ma[f[i]] = i; } ll n; cin >> n; while (n--) { cin >> s; ll ans, num, l; l = strlen(s);//\u5148\u628a\u957f\u5ea6\u6c42\u51fa\u6765\uff0c\u7528\u7684\u65f6\u5019\u76f4\u63a5\u7528 num = 0; for (ll i = 0; i < l; i++) { num = num * 10 + s[i] - '0'; num %= maxx; } cout << ma[num] << endl; } return 0; }","title":"\u6590\u6ce2\u90a3\u5951(\u5927\u6570)"},{"location":"math/Fibo/#nn","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <bits/stdc++.h> using namespace std; const int maxx = 1e9 + 7; typedef long long ll; ll f[200050]; char s[100000]; int main() { ios::sync_with_stdio(false); map<ll, ll> ma; f[0] = 0; f[1] = 1; for (ll i = 2; i < 200001; i++) { f[i] = (f[i - 1] + f[i - 2]) % maxx; ma[f[i]] = i; } ll n; cin >> n; while (n--) { cin >> s; ll ans, num, l; l = strlen(s);//\u5148\u628a\u957f\u5ea6\u6c42\u51fa\u6765\uff0c\u7528\u7684\u65f6\u5019\u76f4\u63a5\u7528 num = 0; for (ll i = 0; i < l; i++) { num = num * 10 + s[i] - '0'; num %= maxx; } cout << ma[num] << endl; } return 0; }","title":"\u6590\u6ce2\u90a3\u5951(\u5927\u6570\uff0c\u6839\u636e\u7b2cn\u9879\u7684\u503c\u63a8\u51fan)"},{"location":"math/bign/","text":"\u5927\u6570\u76f8\u52a0(\u6b63\u6574\u6570) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> #include <string> #include <algorithm> using namespace std; int main() { int n; cin >> n; int m = 0; int l = 0; for (int i = 1; i <= n; i++) { string s1, s2, s(10000, '0'); cin >> s1 >> s2; m++; cout << (l++ ? \"\\n\" : \"\"); reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); for (int j = 0; j < s1.length(); j++) s[j] = s1[j]; int temp = 0; for (int k = 0; k < s2.length(); k++) { temp += s[k] - 48 + s2[k] - 48; s[k] = temp % 10 + '0'; temp /= 10; } s[s2.length()] = s[s2.length()] - 48 + temp + 48; reverse(s.begin(), s.end()); reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); cout << \"Case\" << m << \":\" << endl; cout << s1 << \"+\" << s2 << \"=\" << s.substr(s.find_first_not_of('0')) << endl; } return 0; } \u5927\u6570\u76f8\u51cf(\u6b63\u6574\u6570) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 #include <iostream> #include <string> #include <cstring> #include <vector> #include <algorithm> using namespace std; int strComp(string &s1, string &s2) { int len1 = s1.length(); int len2 = s2.length(); if (len1 > len2) return 0; else if (len1 < len2) return 1; else { if (s1 >= s2) return 0; else return 1; } } int main() { string s1, s2; while (cin >> s1 >> s2) { string s(10000, '0'); bool fgEx = true; if (strComp(s1, s2) == 1) { string temp; temp = s1; s1 = s2; s2 = temp; fgEx = false; } if (s1 == s2) { cout << s1 << \" - \" << s2 << \" = \" << \"0\" << endl; continue; } reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); for (int i = 0; i < s1.length(); i++) s[i] = s1[i]; for (int i = 0; i < s2.length(); i++) { if (s[i] >= s2[i]) s[i] = s[i] - '0' - (s2[i] - '0') + '0'; else { s[i + 1] = s[i + 1] - '0' - 1 + '0'; s[i] = s[i] - '0' + 10 - (s2[i] - '0') + '0'; } } if (fgEx == false) { reverse(s2.begin(), s2.end()); cout << s2 << \" - \"; reverse(s1.begin(), s1.end()); cout << s1 << \" = \"; reverse(s.begin(), s.end()); cout << \"-\" << s.substr(s.find_first_not_of('0')) << endl; } else { reverse(s1.begin(), s1.end()); cout << s1 << \" - \"; reverse(s2.begin(), s2.end()); cout << s2 << \" = \"; reverse(s.begin(), s.end()); cout << s.substr(s.find_first_not_of('0')) << endl; } } return 0; } \u5927\u6570\u76f8\u4e58(\u6b63\u6574\u6570) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <iostream> #include <string> #include <cstring> #include <vector> #include <algorithm> using namespace std; int main() { string s1, s2; while (cin >> s1 >> s2) { string s(1000, '0'); reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); for (int i = 0; i < s1.length(); i++) for (int j = 0; j < s2.length(); j++) { int temp = (s1[i] - '0') * (s2[j] - '0'); s[i + j + 1] = s[i + j + 1] - '0' + (s[i + j] - '0' + temp) / 10 + '0'; s[i + j] = (s[i + j] - '0' + temp) % 10 + '0'; } reverse(s.begin(), s.end()); if (s.find_first_not_of('0') == string::npos) cout << \"0\" << endl; else cout << s.substr(s.find_first_not_of('0')) << endl; } return 0; } \u5927\u6570\u76f8\u9664(\u6b63\u6574\u6570) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 #include <iostream> #include <string> #include <cstring> #include <vector> #include <algorithm> using namespace std; int strComp(string &s1, string &s2) { int len1 = s1.length(); int len2 = s2.length(); if (len1 > len2) return 0; else if (len1 < len2) return 1; else { if (s1 >= s2) return 0; else return 1; } } string Sub(string s1, string s2) { if (strComp(s1, s2) == 1) return \"-1\"; reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); string s(1000, '0'); for (int i = 0; i < s1.length(); i++) s[i] = s1[i]; for (int i = 0; i < s2.length(); i++) { if (s[i] >= s2[i]) s[i] = s[i] - '0' - (s2[i] - '0') + '0'; else { s[i + 1] = s[i + 1] - '0' - 1 + '0'; s[i] = s[i] - '0' + 10 - (s2[i] - '0') + '0'; } } reverse(s.begin(), s.end()); if (s.find_first_not_of('0') == string::npos) return \"0\"; else return s.substr(s.find_first_not_of('0')); } int main() { string s1, s2; while (cin >> s1 >> s2) { string s(1000, '0'); if (strComp(s1, s2) == 1) { cout << \"0\" << endl; continue; } int len1 = s1.length(); int len2 = s2.length(); int dis = len1 - len2; for (int i = 0; i < dis; i++) s2 += '0'; string ans(1000, '0'); while (dis >= 0) { int sum = 0; string temp; while ((temp = Sub(s1, s2)) != \"-1\") { sum++; s1 = temp; } ans[ans.length() - dis - 1] = sum + '0'; dis--; s2 = s2.substr(0, len2 + dis); } if (ans.find_first_not_of('0') == string::npos) cout << \"0\" << endl; else { string res = ans.substr(ans.find_first_not_of('0')); cout << res << endl; } } return 0; } \u5927\u6570\u53d6\u6a21 \u00b6 1 2 3 4 5 6 7 8 9 10 typedef long long ll; cin >> s; ll ans, num; ll l = strlen(s); num = 0; for (ll i = 0; i < l; i++) { num = num * 10 + s[i] - '0'; num %= maxx; }","title":"\u5927\u6570"},{"location":"math/bign/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> #include <string> #include <algorithm> using namespace std; int main() { int n; cin >> n; int m = 0; int l = 0; for (int i = 1; i <= n; i++) { string s1, s2, s(10000, '0'); cin >> s1 >> s2; m++; cout << (l++ ? \"\\n\" : \"\"); reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); for (int j = 0; j < s1.length(); j++) s[j] = s1[j]; int temp = 0; for (int k = 0; k < s2.length(); k++) { temp += s[k] - 48 + s2[k] - 48; s[k] = temp % 10 + '0'; temp /= 10; } s[s2.length()] = s[s2.length()] - 48 + temp + 48; reverse(s.begin(), s.end()); reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); cout << \"Case\" << m << \":\" << endl; cout << s1 << \"+\" << s2 << \"=\" << s.substr(s.find_first_not_of('0')) << endl; } return 0; }","title":"\u5927\u6570\u76f8\u52a0(\u6b63\u6574\u6570)"},{"location":"math/bign/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 #include <iostream> #include <string> #include <cstring> #include <vector> #include <algorithm> using namespace std; int strComp(string &s1, string &s2) { int len1 = s1.length(); int len2 = s2.length(); if (len1 > len2) return 0; else if (len1 < len2) return 1; else { if (s1 >= s2) return 0; else return 1; } } int main() { string s1, s2; while (cin >> s1 >> s2) { string s(10000, '0'); bool fgEx = true; if (strComp(s1, s2) == 1) { string temp; temp = s1; s1 = s2; s2 = temp; fgEx = false; } if (s1 == s2) { cout << s1 << \" - \" << s2 << \" = \" << \"0\" << endl; continue; } reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); for (int i = 0; i < s1.length(); i++) s[i] = s1[i]; for (int i = 0; i < s2.length(); i++) { if (s[i] >= s2[i]) s[i] = s[i] - '0' - (s2[i] - '0') + '0'; else { s[i + 1] = s[i + 1] - '0' - 1 + '0'; s[i] = s[i] - '0' + 10 - (s2[i] - '0') + '0'; } } if (fgEx == false) { reverse(s2.begin(), s2.end()); cout << s2 << \" - \"; reverse(s1.begin(), s1.end()); cout << s1 << \" = \"; reverse(s.begin(), s.end()); cout << \"-\" << s.substr(s.find_first_not_of('0')) << endl; } else { reverse(s1.begin(), s1.end()); cout << s1 << \" - \"; reverse(s2.begin(), s2.end()); cout << s2 << \" = \"; reverse(s.begin(), s.end()); cout << s.substr(s.find_first_not_of('0')) << endl; } } return 0; }","title":"\u5927\u6570\u76f8\u51cf(\u6b63\u6574\u6570)"},{"location":"math/bign/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <iostream> #include <string> #include <cstring> #include <vector> #include <algorithm> using namespace std; int main() { string s1, s2; while (cin >> s1 >> s2) { string s(1000, '0'); reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); for (int i = 0; i < s1.length(); i++) for (int j = 0; j < s2.length(); j++) { int temp = (s1[i] - '0') * (s2[j] - '0'); s[i + j + 1] = s[i + j + 1] - '0' + (s[i + j] - '0' + temp) / 10 + '0'; s[i + j] = (s[i + j] - '0' + temp) % 10 + '0'; } reverse(s.begin(), s.end()); if (s.find_first_not_of('0') == string::npos) cout << \"0\" << endl; else cout << s.substr(s.find_first_not_of('0')) << endl; } return 0; }","title":"\u5927\u6570\u76f8\u4e58(\u6b63\u6574\u6570)"},{"location":"math/bign/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 #include <iostream> #include <string> #include <cstring> #include <vector> #include <algorithm> using namespace std; int strComp(string &s1, string &s2) { int len1 = s1.length(); int len2 = s2.length(); if (len1 > len2) return 0; else if (len1 < len2) return 1; else { if (s1 >= s2) return 0; else return 1; } } string Sub(string s1, string s2) { if (strComp(s1, s2) == 1) return \"-1\"; reverse(s1.begin(), s1.end()); reverse(s2.begin(), s2.end()); string s(1000, '0'); for (int i = 0; i < s1.length(); i++) s[i] = s1[i]; for (int i = 0; i < s2.length(); i++) { if (s[i] >= s2[i]) s[i] = s[i] - '0' - (s2[i] - '0') + '0'; else { s[i + 1] = s[i + 1] - '0' - 1 + '0'; s[i] = s[i] - '0' + 10 - (s2[i] - '0') + '0'; } } reverse(s.begin(), s.end()); if (s.find_first_not_of('0') == string::npos) return \"0\"; else return s.substr(s.find_first_not_of('0')); } int main() { string s1, s2; while (cin >> s1 >> s2) { string s(1000, '0'); if (strComp(s1, s2) == 1) { cout << \"0\" << endl; continue; } int len1 = s1.length(); int len2 = s2.length(); int dis = len1 - len2; for (int i = 0; i < dis; i++) s2 += '0'; string ans(1000, '0'); while (dis >= 0) { int sum = 0; string temp; while ((temp = Sub(s1, s2)) != \"-1\") { sum++; s1 = temp; } ans[ans.length() - dis - 1] = sum + '0'; dis--; s2 = s2.substr(0, len2 + dis); } if (ans.find_first_not_of('0') == string::npos) cout << \"0\" << endl; else { string res = ans.substr(ans.find_first_not_of('0')); cout << res << endl; } } return 0; }","title":"\u5927\u6570\u76f8\u9664(\u6b63\u6574\u6570)"},{"location":"math/bign/#_5","text":"1 2 3 4 5 6 7 8 9 10 typedef long long ll; cin >> s; ll ans, num; ll l = strlen(s); num = 0; for (ll i = 0; i < l; i++) { num = num * 10 + s[i] - '0'; num %= maxx; }","title":"\u5927\u6570\u53d6\u6a21"},{"location":"math/poww/","text":"\u5feb\u901f\u5e42 \u00b6 1 2 3 4 5 6 7 8 9 10 ll poww(ll x, ll y, ll z) { ll ans = 1, base = x; while (y != 0) { if (y & 1 != 0) ans = ans * base % z; base = (base % z) * (base % z) % z; y >>= 1; } return ans; }","title":"\u5feb\u901f\u5e42"},{"location":"math/poww/#_1","text":"1 2 3 4 5 6 7 8 9 10 ll poww(ll x, ll y, ll z) { ll ans = 1, base = x; while (y != 0) { if (y & 1 != 0) ans = ans * base % z; base = (base % z) * (base % z) % z; y >>= 1; } return ans; }","title":"\u5feb\u901f\u5e42"},{"location":"math/prime/","text":"Eratosthenes(\u57c3\u62c9\u6258\u8272\u5c3c\u7b5b\u6cd5) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include<bits/stdc++.h> using namespace std; int a[1000000]; int main() { int sum=0,n; int i,j; while(~scanf(\"%d\",&n)) { sum=0; for(i=2;i<=n;i++) a[i]=1; for(i=2;i<=sqrt(n);i++){ for(j=2*i;j<=n;j+=i){ a[j]=0; } } for(i=2;i<=n;i++){ if(a[i]) cout<<i<<endl;; } } return 0; } \u6b27\u62c9\u7b5b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include<stdio.h> #include<stdbool.h> #define N 100 int main(void) { bool number[N+1]; int prime[N+1]; int i,j,count=0; memset(number,true,sizeof(number)); for(i=2;i<=N;i++) { if(number[i]) prime[count++]=i; for(j=0;j<count&&prime[j]*i<=N;j++) { number[prime[j]*i]=false; if(i%prime[j]==0)//\u7cbe\u534e\u5c31\u5728\u4e8e\u6b64\uff1a\u5b83\u4fdd\u8bc1\u6bcf\u4e2a\u5408\u6570\u53ea\u4f1a\u88ab\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u6570\u7b5b\u53bb\uff0c\u56e0\u6b64\u6bcf\u4e2a\u6570\u53ea\u4f1a\u88ab\u6807\u8bb0\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n) break; } } for(i=2;i<N+1;i++) if(number[i]==true) printf(\"%d \",i); return 0; }","title":"\u7d20\u6570"},{"location":"math/prime/#eratosthenes","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include<bits/stdc++.h> using namespace std; int a[1000000]; int main() { int sum=0,n; int i,j; while(~scanf(\"%d\",&n)) { sum=0; for(i=2;i<=n;i++) a[i]=1; for(i=2;i<=sqrt(n);i++){ for(j=2*i;j<=n;j+=i){ a[j]=0; } } for(i=2;i<=n;i++){ if(a[i]) cout<<i<<endl;; } } return 0; }","title":"Eratosthenes(\u57c3\u62c9\u6258\u8272\u5c3c\u7b5b\u6cd5)"},{"location":"math/prime/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include<stdio.h> #include<stdbool.h> #define N 100 int main(void) { bool number[N+1]; int prime[N+1]; int i,j,count=0; memset(number,true,sizeof(number)); for(i=2;i<=N;i++) { if(number[i]) prime[count++]=i; for(j=0;j<count&&prime[j]*i<=N;j++) { number[prime[j]*i]=false; if(i%prime[j]==0)//\u7cbe\u534e\u5c31\u5728\u4e8e\u6b64\uff1a\u5b83\u4fdd\u8bc1\u6bcf\u4e2a\u5408\u6570\u53ea\u4f1a\u88ab\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u6570\u7b5b\u53bb\uff0c\u56e0\u6b64\u6bcf\u4e2a\u6570\u53ea\u4f1a\u88ab\u6807\u8bb0\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n) break; } } for(i=2;i<N+1;i++) if(number[i]==true) printf(\"%d \",i); return 0; }","title":"\u6b27\u62c9\u7b5b"},{"location":"search/bfs/","text":"BFS \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include<iostream> #include<algorithm> #include<queue> #include<cstring> using namespace std; #define pill pair<int,int> int sx,sy,ex,ey,n; char ma[1050][1050]; int vis[1050][1050]; int step[1050][1050]; int d[4][2]={-1,0,0,1,1,0,0,-1}; queue<pair<int,int> >que; void bfs(int x,int y) { vis[x][y]=1; que.push(pill(x,y)); while(!que.empty()) { x=que.front().first; y=que.front().second; que.pop(); for(int i=0;i<4;i++) { int xx=x+d[i][0]; int yy=y+d[i][1]; if(ma[xx][yy]=='#'||xx<0||xx>=n||yy<0||yy>=n||vis[xx][yy]==1) continue; que.push(pill(xx,yy)); vis[xx][yy]=1; step[xx][yy]=step[x][y]+1; } } } int main() { while(cin>>n) { memset(vis,0,sizeof(vis)); for(int i=0;i<n;i++) { scanf(\"%s\",ma[i]); } for(int i=0;i<n;i++) for(int j=0;j<n;j++) { if(ma[i][j]=='S') { sx=i; sy=j; } if(ma[i][j]=='E') { ex=i; ey=j; } } bfs(sx,sy); if(vis[ex][ey]==0) { puts(\"-1\"); continue; } cout<<step[ex][ey]<<endl;} }","title":"BFS"},{"location":"search/bfs/#bfs","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include<iostream> #include<algorithm> #include<queue> #include<cstring> using namespace std; #define pill pair<int,int> int sx,sy,ex,ey,n; char ma[1050][1050]; int vis[1050][1050]; int step[1050][1050]; int d[4][2]={-1,0,0,1,1,0,0,-1}; queue<pair<int,int> >que; void bfs(int x,int y) { vis[x][y]=1; que.push(pill(x,y)); while(!que.empty()) { x=que.front().first; y=que.front().second; que.pop(); for(int i=0;i<4;i++) { int xx=x+d[i][0]; int yy=y+d[i][1]; if(ma[xx][yy]=='#'||xx<0||xx>=n||yy<0||yy>=n||vis[xx][yy]==1) continue; que.push(pill(xx,yy)); vis[xx][yy]=1; step[xx][yy]=step[x][y]+1; } } } int main() { while(cin>>n) { memset(vis,0,sizeof(vis)); for(int i=0;i<n;i++) { scanf(\"%s\",ma[i]); } for(int i=0;i<n;i++) for(int j=0;j<n;j++) { if(ma[i][j]=='S') { sx=i; sy=j; } if(ma[i][j]=='E') { ex=i; ey=j; } } bfs(sx,sy); if(vis[ex][ey]==0) { puts(\"-1\"); continue; } cout<<step[ex][ey]<<endl;} }","title":"BFS"},{"location":"search/dfs/","text":"DFS(\u4e0d\u77e5\u9053\u8fd9\u4e2a\u677f\u5b50\u8be5\u600e\u4e48\u627e\uff0c\u5148\u8fd9\u6837\u5427) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <stdio.h> #include <stdlib.h> int book[10], a[10], n; void dfs(int step) { int i; if (step == n + 1)//\u5f53\u4f60\u5728\u7b2cn+1\u6b65\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u524dn\u90e8\u5df2\u7ecf\u6392\u597d\u4e86\u3002 { for (i = 1; i <= n; i++) printf(\"%d \", a[i]); printf(\"\\n\"); return; //\u8fd4\u56de\u4e4b\u524d\u7684\u4e00\u6b65\uff1b } for (i = 1; i <= n; i++) //\u6309\u71671\uff0c2\uff0c3.\u3002\u3002\u7684\u65b9\u5f0f\u4e00\u4e00\u5c1d\u8bd5\u3002 { if (book[i] == 0) //\u5224\u65ad\u6251\u514b\u724ci\u662f\u4e0d\u662f\u8fd8\u5728\u624b\u91cc { a[step] = i; //\u5c06i\u724c\u653e\u5728\u7b2cstep\u4e2a\u76d2\u5b50\u91cc\u3002 book[i] = 1; //\u8868\u793a\u6251\u514b\u724c\u4e0d\u518d\u7b2cstep\u4e2a\u76d2\u5b50\u91cc dfs(step + 1); //\u7ee7\u7eed\u4e0b\u4e00\u6b65\u3002 book[i] = 0; //\u5c06\u521a\u624d\u5c1d\u8bd5\u7684\u6251\u514b\u6536\u56de\uff0c\u624d\u80fd\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u5c1d\u8bd5\u3002 } } return; //\u7ed3\u675f\u641c\u7d22\u3002 } int main() { while (~scanf(\"%d\", &n)) dfs(1); return 0; }","title":"DFS"},{"location":"search/dfs/#dfs","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <stdio.h> #include <stdlib.h> int book[10], a[10], n; void dfs(int step) { int i; if (step == n + 1)//\u5f53\u4f60\u5728\u7b2cn+1\u6b65\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u524dn\u90e8\u5df2\u7ecf\u6392\u597d\u4e86\u3002 { for (i = 1; i <= n; i++) printf(\"%d \", a[i]); printf(\"\\n\"); return; //\u8fd4\u56de\u4e4b\u524d\u7684\u4e00\u6b65\uff1b } for (i = 1; i <= n; i++) //\u6309\u71671\uff0c2\uff0c3.\u3002\u3002\u7684\u65b9\u5f0f\u4e00\u4e00\u5c1d\u8bd5\u3002 { if (book[i] == 0) //\u5224\u65ad\u6251\u514b\u724ci\u662f\u4e0d\u662f\u8fd8\u5728\u624b\u91cc { a[step] = i; //\u5c06i\u724c\u653e\u5728\u7b2cstep\u4e2a\u76d2\u5b50\u91cc\u3002 book[i] = 1; //\u8868\u793a\u6251\u514b\u724c\u4e0d\u518d\u7b2cstep\u4e2a\u76d2\u5b50\u91cc dfs(step + 1); //\u7ee7\u7eed\u4e0b\u4e00\u6b65\u3002 book[i] = 0; //\u5c06\u521a\u624d\u5c1d\u8bd5\u7684\u6251\u514b\u6536\u56de\uff0c\u624d\u80fd\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u5c1d\u8bd5\u3002 } } return; //\u7ed3\u675f\u641c\u7d22\u3002 } int main() { while (~scanf(\"%d\", &n)) dfs(1); return 0; }","title":"DFS(\u4e0d\u77e5\u9053\u8fd9\u4e2a\u677f\u5b50\u8be5\u600e\u4e48\u627e\uff0c\u5148\u8fd9\u6837\u5427)"},{"location":"string/Manacher/","text":"Manacher(\u9a6c\u62c9\u8f66\u7b97\u6cd5) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include<bits/stdc++.h> using namespace std; const int MAXN = 1e5; char str[MAXN]; char tmp[2*MAXN]; int len[2*MAXN]; int Manacher(char str[]){ tmp[0] = '$'; tmp[1] = '#'; int str_len = strlen(str); for(int i = 1;i <= str_len;i++){ tmp[2*i] = str[i-1]; tmp[2*i+1] = '#'; } tmp[2*str_len+2] = '\\0'; int mx = 0; int maxlen = -1; int mid; for(int i = 1; tmp[i]; i++){ if(i < mx) len[i] = min(len[2*mid-i],mx-i); else len[i] = 1; while(tmp[i-len[i]] == tmp[i+len[i]]) len[i]++; if(len[i]+i > mx){ mx = len[i]+i; mid = i; } maxlen = max(maxlen,len[i]-1); } return maxlen;//\u8fd4\u56de\u6700\u957f\u56de\u6587\u5b57\u4e32\u7684\u957f\u5ea6 } int main(){ int n; cin>>n; scanf(\"%s\",str); cout<<Manacher(str); return 0; }","title":"\u6700\u957f\u56de\u6587\u5b57\u4e32"},{"location":"string/Manacher/#manacher","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include<bits/stdc++.h> using namespace std; const int MAXN = 1e5; char str[MAXN]; char tmp[2*MAXN]; int len[2*MAXN]; int Manacher(char str[]){ tmp[0] = '$'; tmp[1] = '#'; int str_len = strlen(str); for(int i = 1;i <= str_len;i++){ tmp[2*i] = str[i-1]; tmp[2*i+1] = '#'; } tmp[2*str_len+2] = '\\0'; int mx = 0; int maxlen = -1; int mid; for(int i = 1; tmp[i]; i++){ if(i < mx) len[i] = min(len[2*mid-i],mx-i); else len[i] = 1; while(tmp[i-len[i]] == tmp[i+len[i]]) len[i]++; if(len[i]+i > mx){ mx = len[i]+i; mid = i; } maxlen = max(maxlen,len[i]-1); } return maxlen;//\u8fd4\u56de\u6700\u957f\u56de\u6587\u5b57\u4e32\u7684\u957f\u5ea6 } int main(){ int n; cin>>n; scanf(\"%s\",str); cout<<Manacher(str); return 0; }","title":"Manacher(\u9a6c\u62c9\u8f66\u7b97\u6cd5)"}]}